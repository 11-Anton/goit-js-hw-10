{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\n\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nref.dateTimePicker.addEventListener('click', () => {\n    ref.btnStart.removeAttribute('disabled');\n});\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    if (selectedDates[0] <= new Date()) {\n      iziToast.show({\n        title: 'WARNING!',\n        message: 'Please choose a date in the future',\n        color: 'green',\n        position: 'topRight',\n      });\n      ref.btnStart.setAttribute('disabled', 'disabled');\n    } else {\n      ref.btnStart.removeAttribute('disabled');\n      userSelectedDate = selectedDates[0];\n    }\n  },\n};\n\nflatpickr('#datetime-picker', options);\n\nref.btnStart.addEventListener('click', () => {\n  ref.btnStart.setAttribute('disabled', 'disabled');\n  ref.dateTimePicker.setAttribute('disabled', 'disabled');\n  intervalId = setInterval(() => {\n    diffDate = userSelectedDate - Date.now();\n    const { days, hours, minutes, seconds } = convertMs(diffDate);\n    addLeadingZero({ days, hours, minutes, seconds });\n  }, 1000);\n});\n\nfunction addLeadingZero({ days, hours, minutes, seconds }) {\n  if (diffDate <= 1000) {\n    clearInterval(intervalId);\n    iziToast.show({\n      title: 'Stop sleeping!!!',\n      message: 'Wake up! ',\n      color: 'red',\n      position: 'bottomCenter',\n    });\n  }\n  ref.currentDays.textContent = `${days}`.padStart(2, '0');\n  ref.currentHours.textContent = `${hours}`.padStart(2, '0');\n  ref.currentMinutes.textContent = `${minutes}`.padStart(2, '0');\n  ref.currentSeconds.textContent = `${seconds}`.padStart(2, '0');\n}\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}"],"names":["options","selectedDates","iziToast","flatpickr","days","hours","minutes","seconds","convertMs","addLeadingZero","ms"],"mappings":"2FAMA,IAAI,eAAe,iBAAiB,QAAS,IAAM,CAC/C,IAAI,SAAS,gBAAgB,UAAU,CAC3C,CAAC,EAED,MAAMA,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACjBA,EAAc,CAAC,GAAK,IAAI,MAC1BC,EAAS,KAAK,CACZ,MAAO,WACP,QAAS,qCACT,MAAO,QACP,SAAU,UAClB,CAAO,EACD,IAAI,SAAS,aAAa,WAAY,UAAU,IAEhD,IAAI,SAAS,gBAAgB,UAAU,EACvC,iBAAmBD,EAAc,CAAC,EAErC,CACH,EAEAE,EAAU,mBAAoBH,CAAO,EAErC,IAAI,SAAS,iBAAiB,QAAS,IAAM,CAC3C,IAAI,SAAS,aAAa,WAAY,UAAU,EAChD,IAAI,eAAe,aAAa,WAAY,UAAU,EACtD,WAAa,YAAY,IAAM,CAC7B,SAAW,iBAAmB,KAAK,MACnC,KAAM,CAAE,KAAAI,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYC,EAAU,QAAQ,EAC5DC,EAAe,CAAE,KAAAL,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAS,CAAA,CACjD,EAAE,GAAI,CACT,CAAC,EAED,SAASE,EAAe,CAAE,KAAAL,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,EAAI,CACrD,UAAY,MACd,cAAc,UAAU,EACxBL,EAAS,KAAK,CACZ,MAAO,mBACP,QAAS,YACT,MAAO,MACP,SAAU,cAChB,CAAK,GAEH,IAAI,YAAY,YAAc,GAAGE,CAAI,GAAG,SAAS,EAAG,GAAG,EACvD,IAAI,aAAa,YAAc,GAAGC,CAAK,GAAG,SAAS,EAAG,GAAG,EACzD,IAAI,eAAe,YAAc,GAAGC,CAAO,GAAG,SAAS,EAAG,GAAG,EAC7D,IAAI,eAAe,YAAc,GAAGC,CAAO,GAAG,SAAS,EAAG,GAAG,CAC/D,CAEA,SAASC,EAAUE,EAAI,CAMrB,MAAMN,EAAO,KAAK,MAAMM,EAAK,KAAG,EAC1BL,EAAQ,KAAK,MAAOK,EAAK,MAAO,IAAI,EACpCJ,EAAU,KAAK,MAAQI,EAAK,MAAO,KAAQ,GAAM,EACjDH,EAAU,KAAK,MAASG,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAN,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC"}